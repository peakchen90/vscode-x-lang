{
  "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
  "name": "x-lang",
  "patterns": [
    {
      "include": "#keywords"
    },
    {
      "include": "#constants"
    },
    {
      "include": "#numbers"
    },
    {
      "include": "#comments"
    },
    {
      "include": "#function-declaration"
    },
    {
      "include": "#class-declaration"
    },
    {
      "include": "#variable-declaration"
    },
    {
      "include": "#kinds"
    },
    {
      "include": "#identifiers"
    },
    {
      "include": "#operators"
    }
  ],
  "repository": {
    "operators": {
      "patterns": [
        {
          "name": "keyword.operator.x-lang",
          "match": "([+*=<>&|!~%^]|/(?!/)|-(?!>))"
        }
      ]
    },
    "keywords": {
      "patterns": [
        {
          "name": "keyword.control.x-lang",
          "match": "\\b(return|if|else|loop|break|continue|import|extends)\\b"
        },
        {
          "name": "storage.modifier.x-lang",
          "match": "\\b(pub)\\b"
        },
        {
          "name": "constant.language.x-lang",
          "match": "\\b(true|false)\\b"
        },
        {
          "name": "variable.language.x-lang",
          "match": "\\b(super|this)\\b"
        },
        {
          "name": "storage.type.x-lang",
          "match": "\\b(var)\\b"
        }
      ]
    },
    "constants": {
      "patterns": [
        {
          "name": "string.quoted.double.raw.x-lang",
          "begin": "\\br\"",
          "end": "\"",
          "patterns": [
            {
              "name": "constant.character.escape.x-lang",
              "match": "\\\\."
            }
          ]
        },
        {
          "name": "string.quoted.double.x-lang",
          "begin": "\"",
          "end": "(\"|\\n)",
          "patterns": [
            {
              "name": "constant.character.escape.x-lang",
              "match": "\\\\."
            },
            {
              "match": "([^\"]*?)(?=\n)",
              "captures": {
                "1": {
                  "name": "invalid.illegal.x-lang"
                }
              }
            }
          ]
        },
        {
          "name": "constant.numeric.x-lang",
          "match": "\\b\\d+(\\.\\d*)?\\b"
        }
      ]
    },
    "comments": {
      "patterns": [
        {
          "name": "comment.line.x-lang",
          "match": "//.*"
        },
        {
          "begin": "/\\*",
          "end": "\\*/",
          "name": "comment.block.x-lang"
        }
      ]
    },
    "function-declaration": {
      "begin": "\\b(fn)\\b",
      "end": "\\{",
      "beginCaptures": {
        "1": {
          "name": "storage.type.x-lang"
        }
      },
      "patterns": [
        {
          "begin": "\\G",
          "end": "([a-zA-Z_$][a-zA-Z\\d_$]*)",
          "endCaptures": {
            "1": {
              "name": "entity.name.function.x-lang"
            }
          }
        },
        {
          "begin": "\\(",
          "end": "\\)",
          "patterns": [
            {
              "match": "[a-zA-Z_$][a-zA-Z\\d_$]*",
              "name": "variable.parameter.x-lang"
            },
            {
              "include": "#kinds"
            }
          ]
        },
        {
          "begin": "(->)",
          "end": "(num|bool|str|void|(\\w+))\\b",
          "beginCaptures": {
            "1": {
              "name": "keyword.operator.x-lang"
            }
          },
          "endCaptures": {
            "1": {
              "name": "support.type.x-lang"
            },
            "2": {
              "name": "invalid.illegal.x-lang"
            }
          }
        }
      ]
    },
    "class-declaration": {
      "begin": "\\b(class)\\b",
      "end": "\\{",
      "beginCaptures": {
        "1": {
          "name": "storage.type.x-lang"
        }
      },
      "patterns": [
        {
          "begin": "\\G",
          "end": "([a-zA-Z_$][a-zA-Z\\d_$]*)",
          "endCaptures": {
            "1": {
              "name": "entity.name.type.x-lang"
            }
          }
        }
      ]
    },
    "kinds": {
      "begin": "(\\:)",
      "end": "(num|bool|str|void|(\\w+))\\b",
      "beginCaptures": {
        "1": {
          "name": "keyword.operator.x-lang"
        }
      },
      "endCaptures": {
        "1": {
          "name": "support.type.x-lang"
        },
        "2": {
          "name": "invalid.illegal.x-lang"
        }
      }
    },
    "identifiers": {
      "match": "[a-zA-Z_$][a-zA-Z\\d_$]*",
      "name": "variable.other.x-lang"
    }
  },
  "scopeName": "source.x"
}
